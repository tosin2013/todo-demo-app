name: Build and Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set docker image name env
      run: echo "IMAGE_NAME=quay.io/takinosh/todo-demo-app" >> $GITHUB_ENV

    - name: Set docker image tag env
      run: echo "TAG_VERSION=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: oracle

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean package
    - name: test result
      run: |
        pwd
        ls -lath . 
        ls -R target

    - name: Login to Quay.io
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_IO_USERNAME }}
        password: ${{ secrets.QUAY_IO_PASSWORD }}

    - name: Build Docker image
      working-directory: /home/runner/work/todo-demo-app/todo-demo-app
      run: |
        #pwd
        #ls -lath .
        #find . -print
        rm -rf .dockerignore
        #docker build -f src/main/docker/Dockerfile -t ${{ env.IMAGE_NAME }}:$TAG_VERSION .
        docker build -f src/main/docker/Dockerfile.jvm -t ${{ env.IMAGE_NAME }}:$TAG_VERSION .

    #- name: Log in to Docker Hub
    #  run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Push Docker Image
      run: docker push ${{ env.IMAGE_NAME }}
